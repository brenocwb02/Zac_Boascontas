/**
 * @file Quiz.gs
 * @description Cont√©m toda a l√≥gica e os dados para o Quiz de Perfil Financeiro.
 */

// Chave para armazenar o estado do quiz do usu√°rio no cache
const QUIZ_STATE_KEY = 'financial_quiz_state';

// --- BANCO DE PERGUNTAS E RESPOSTAS ---
// Cada op√ß√£o de resposta atribui pontos a um perfil espec√≠fico.
const QUIZ_QUESTIONS = [
  {
    question: "1/5: Quando voc√™ recebe um dinheiro extra e inesperado, qual √© a sua primeira rea√ß√£o?",
    options: [
      { text: "Guardar a maior parte para uma meta futura.", profile: "Planejador", points: 2 },
      { text: "Pensar em como posso investi-lo para que renda mais.", profile: "Construtor", points: 2 },
      { text: "Gastar com algo que eu quero h√° muito tempo.", profile: "Despreocupado", points: 2 },
      { text: "Usar para realizar um pequeno sonho ou ter uma experi√™ncia.", profile: "Sonhador", points: 2 },
      { text: "Depende do meu humor e da situa√ß√£o no momento.", profile: "Camale√£o", points: 2 }
    ]
  },
  {
    question: "2/5: Como voc√™ descreveria a sua rela√ß√£o com o seu or√ßamento mensal?",
    options: [
      { text: "Tenho uma planilha ou app e sigo o plano √† risca.", profile: "Planejador", points: 2 },
      { text: "Foco mais em aumentar a minha renda do que em controlar gastos pequenos.", profile: "Construtor", points: 2 },
      { text: "Or√ßamento? Eu apenas tento n√£o gastar mais do que ganho.", profile: "Despreocupado", points: 2 },
      { text: "√â dif√≠cil seguir um or√ßamento com tantos sonhos para realizar.", profile: "Sonhador", points: 2 },
      { text: "√Äs vezes controlo, outras vezes sou mais flex√≠vel.", profile: "Camale√£o", points: 2 }
    ]
  },
  {
    question: "3/5: Ao pensar em investimentos, o que √© mais importante para voc√™?",
    options: [
      { text: "A seguran√ßa e a previsibilidade do retorno, mesmo que seja menor.", profile: "Planejador", points: 2 },
      { text: "O potencial de alto crescimento, mesmo que envolva mais risco.", profile: "Construtor", points: 2 },
      { text: "Investir parece muito complicado, prefiro n√£o pensar nisso.", profile: "Despreocupado", points: 2 },
      { text: "O quanto esse investimento me aproxima de um grande objetivo de vida.", profile: "Sonhador", points: 2 },
      { text: "Sigo as dicas de amigos ou o que est√° em alta no momento.", profile: "Camale√£o", points: 2 }
    ]
  },
  {
    question: "4/5: Qual destas frases melhor descreve a sua atitude em rela√ß√£o a d√≠vidas?",
    options: [
      { text: "Evito ao m√°ximo. S√≥ fa√ßo se for algo muito planeado, como um im√≥vel.", profile: "Planejador", points: 2 },
      { text: "Vejo como uma ferramenta. Posso usar para alavancar um neg√≥cio ou oportunidade.", profile: "Construtor", points: 2 },
      { text: "Acabo por me endividar com coisas do dia a dia, como o cart√£o de cr√©dito.", profile: "Despreocupado", points: 2 },
      { text: "√Äs vezes, fa√ßo d√≠vidas para realizar um sonho ou uma viagem.", profile: "Sonhador", points: 2 },
      { text: "A minha situa√ß√£o com d√≠vidas varia muito de m√™s para m√™s.", profile: "Camale√£o", points: 2 }
    ]
  },
    {
    question: "5/5: O que mais lhe traria satisfa√ß√£o financeira?",
    options: [
      { text: "Saber que tenho um futuro financeiro seguro e bem planeado.", profile: "Planejador", points: 2 },
      { text: "Construir um patrim√≥nio s√≥lido e ver os meus ativos a crescer.", profile: "Construtor", points: 2 },
      { text: "Ter dinheiro suficiente para n√£o me preocupar com as contas do dia a dia.", profile: "Despreocupado", points: 2 },
      { text: "Poder realizar os meus maiores sonhos sem me preocupar com o custo.", profile: "Sonhador", points: 2 },
      { text: "Ter flexibilidade para lidar com o que quer que a vida me traga.", profile: "Camale√£o", points: 2 }
    ]
  }
];

/**
 * Inicia o Quiz de Perfil Financeiro para um usu√°rio.
 * @param {string} chatId O ID do chat do Telegram.
 * @param {string} usuario O nome do usu√°rio.
 */
function startFinancialQuiz(chatId, usuario) {
  const initialState = {
    currentQuestion: 0,
    scores: {
      "Planejador": 0,
      "Construtor": 0,
      "Despreocupado": 0,
      "Sonhador": 0,
      "Camale√£o": 0
    }
  };
  setQuizState(chatId, initialState);
  sendQuizQuestion(chatId, initialState);
}

/**
 * Envia a pergunta atual do quiz para o usu√°rio.
 * @param {string} chatId O ID do chat do Telegram.
 * @param {Object} state O estado atual do quiz.
 */
function sendQuizQuestion(chatId, state) {
  const questionIndex = state.currentQuestion;
  
  if (questionIndex >= QUIZ_QUESTIONS.length) {
    finishQuiz(chatId, state);
    return;
  }

  const questionData = QUIZ_QUESTIONS[questionIndex];
  const keyboard = {
    inline_keyboard: questionData.options.map((option, index) => {
      return [{ text: option.text, callback_data: `quiz_${questionIndex}_${index}` }];
    })
  };

  enviarMensagemTelegram(chatId, questionData.question, { reply_markup: keyboard });
}

/**
 * Processa a resposta do usu√°rio a uma pergunta do quiz.
 * @param {string} chatId O ID do chat do Telegram.
 * @param {number} questionIndex O √≠ndice da pergunta respondida.
 * @param {number} optionIndex O √≠ndice da op√ß√£o escolhida.
 */
function handleQuizAnswer(chatId, questionIndex, optionIndex) {
  const state = getQuizState(chatId);
  if (!state || state.currentQuestion !== questionIndex) {
    enviarMensagemTelegram(chatId, "Houve um problema com o quiz. Por favor, comece novamente com /meuperfil.");
    clearQuizState(chatId);
    return;
  }

  const chosenOption = QUIZ_QUESTIONS[questionIndex].options[optionIndex];
  if (chosenOption) {
    state.scores[chosenOption.profile] += chosenOption.points;
  }

  state.currentQuestion++;
  setQuizState(chatId, state);
  sendQuizQuestion(chatId, state);
}

/**
 * Finaliza o quiz, calcula o resultado e envia para o usu√°rio.
 * @param {string} chatId O ID do chat do Telegram.
 * @param {Object} state O estado final do quiz.
 */
function finishQuiz(chatId, state) {
  let finalProfile = "Camale√£o"; // Perfil padr√£o
  let maxScore = 0;

  for (const profile in state.scores) {
    if (state.scores[profile] > maxScore) {
      maxScore = state.scores[profile];
      finalProfile = profile;
    }
  }

  // Salva o perfil do usu√°rio nas propriedades para uso futuro
  const userProps = PropertiesService.getUserProperties();
  userProps.setProperty(`PROFILE_${chatId}`, finalProfile);

  const profileDescription = getProfileDescription(finalProfile);
  const message = `üéâ **Quiz Finalizado!** üéâ\n\nO seu perfil financeiro √©: *${finalProfile}*\n\n${profileDescription}`;
  
  enviarMensagemTelegram(chatId, message);
  clearQuizState(chatId);
}

/**
 * Obt√©m a descri√ß√£o de um perfil financeiro espec√≠fico.
 * @param {string} profileName O nome do perfil.
 * @returns {string} A descri√ß√£o do perfil.
 */
function getProfileDescription(profileName) {
  // Simplesmente retorna o conte√∫do do arquivo Markdown correspondente.
  // Criaremos um novo arquivo .md para armazenar estas descri√ß√µes.
  const descriptions = {
    'Construtor': 'Voc√™ tem foco em construir patrim√≥nio e n√£o tem medo de correr riscos calculados para ver o seu dinheiro render. O seu maior desafio √©, por vezes, n√£o dar a devida aten√ß√£o aos pequenos gastos do dia a dia.',
    'Planejador': 'Organiza√ß√£o e seguran√ßa s√£o os seus lemas. Voc√™ gosta de ter tudo sob controlo, com planilhas e metas bem definidas. O seu desafio √©, ocasionalmente, permitir-se alguma flexibilidade e aproveitar oportunidades inesperadas.',
    'Camale√£o': 'Voc√™ adapta-se facilmente √†s circunst√¢ncias. Ora est√° a controlar tudo, ora est√° mais relaxado. Essa flexibilidade √© uma for√ßa, mas o seu desafio √© manter a consist√™ncia nos seus objetivos de longo prazo.',
    'Despreocupado': 'Viver o presente √© a sua prioridade. Voc√™ lida com o dinheiro conforme as necessidades surgem, sem muito planeamento. O seu maior desafio √© criar o h√°bito de poupar para o futuro e evitar que as d√≠vidas se acumulem.',
    'Sonhador': 'Voc√™ √© motivado por grandes objetivos e sonhos. O dinheiro √© um meio para realizar essas aspira√ß√µes. O seu desafio √© transformar esses grandes sonhos em pequenos passos financeiros, criando um plano concreto para os alcan√ßar.'
  };
  return descriptions[profileName] || "Descri√ß√£o n√£o encontrada.";
}


// --- Fun√ß√µes de Gest√£o de Estado (Cache) ---

function setQuizState(chatId, state) {
  CacheService.getScriptCache().put(`${QUIZ_STATE_KEY}_${chatId}`, JSON.stringify(state), 900); // 15 min de validade
}

function getQuizState(chatId) {
  const cached = CacheService.getScriptCache().get(`${QUIZ_STATE_KEY}_${chatId}`);
  return cached ? JSON.parse(cached) : null;
}

function clearQuizState(chatId) {
  CacheService.getScriptCache().remove(`${QUIZ_STATE_KEY}_${chatId}`);
}


/**
 * **FUN√á√ÉO ATUALIZADA**
 * Agora, al√©m de retornar os dados do quiz, tamb√©m pode retornar apenas o perfil do utilizador.
 * @param {string} chatId O ID do chat do Telegram.
 * @returns {Object|null} O objeto de estado do quiz (se estiver em andamento) ou um objeto com o perfil finalizado.
 */
function getFinancialProfile(chatId) {
    // 1. Verifica se h√° um quiz em andamento no cache
    const quizState = getQuizState(chatId);
    if (quizState) {
        return { inProgress: true, state: quizState };
    }

    // 2. Se n√£o houver quiz ativo, busca o perfil j√° definido nas propriedades do utilizador
    const userProps = PropertiesService.getUserProperties();
    const profile = userProps.getProperty(`PROFILE_${chatId}`);

    if (profile) {
        return { inProgress: false, perfil: profile };
    }

    // 3. Se n√£o encontrou em nenhum dos locais, retorna nulo
    return null;
}
